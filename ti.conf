maxcache=300
optdir=/mnt/sda1/tce/optional

TMPDIR=/mnt/temp
KERNELVER=$(uname -r)
MKSQI=$([ -f /usr/local/bin/mksquashfs ] && echo 1 || echo 0)
getMajorVer() {
	awk '{printf "%d", $1}' /usr/share/doc/tc/release.txt 
}
LISTDEP="$optdir/../../inst/list.dep"
getBuild() {
	BUILD=`uname -m`
	case ${BUILD} in
		armv6l) echo "armv6" ;;
		armv7l) echo "armv7" ;;
		i686)   echo "x86" ;;
		x86_64) [ -f /lib/ld-linux-x86-64.so.2 ] && echo "x86_64" || echo "x86" ;;
		*)      echo "x86" ;;
	esac
}

getMirror() {
	BUILD=$(getBuild)
	read MIRROR < /opt/tcemirror
	#MIRROR="${MIRROR%/}/$(getMajorVer).x/x86/tcz"
	MIRROR="${MIRROR%/}/$(getMajorVer).x/$BUILD/tcz"
}

mksqinst(){
	
	echo all.tcz > $optdir/../onboot.lst                
	mkdir $optdir/../../inst                               
	load "squashfs-tools"                                 
	mtab=""
	for tcz in *.tcz                                    
	do
		[ -d /tmp/tcloop/${tcz%.tcz} ] || sudo mkdir /tmp/tcloop/${tcz%.tcz}
		sudo mount $tcz /tmp/tcloop/${tcz%.tcz} -t squashfs -o loop,ro
		mtab="${mtab} /tmp/tcloop/${tcz%.tcz}"
		yes n | sudo cp -ais /tmp/tcloop/"${tcz%.tcz}"/* / 2>/dev/null
		sudo ldconfig 2>/dev/null          
	done                                                 
	
}

umtemp(){
for um in $mtab;
do
	sudo umount $um
done
}

fuckRepack()
{
#echo "$TMPDIR/extension"
mkdir "all"
sudo cp -a /tmp/tcloop/all/* all/ > /dev/null 2> /dev/null
	echo -ne "Unpacking.."
	#spinner &
for file in *.tcz; do
		EXECINST="$EXECINST $file"
		dirname="${file%.tcz}"
		#echo -ne "Unpacking.. $file\033[0K\r"
		#merge ${dirname}/ all/
		mkdir -p /tmp/tclooptmp/$dirname
		sudo mount $file /tmp/tclooptmp/$dirname -t squashfs -o loop,ro
		cd /tmp/tclooptmp/$dirname
		sudo find -type f > "${optdir}/../../inst/$dirname"
		cd $TMPDIR/extension
		sudo cp -a /tmp/tclooptmp/$dirname/* all/ 
		sudo umount /tmp/tclooptmp/$dirname
		rm $file
	done
	#kill "$!"
	rm -rf /tmp/tclooptmp
	echo ". done"
	pack

}
pack (){
if [ "$EXECINST" ]
then
	
	for line in $EXECINST 
	do
		appname="${line%.tcz}"
		if [ -f "all/usr/local/tce.installed/$appname" ] ;
		then
			echo "Enable startup scripts"
			echo /usr/local/tce.installed/$appname >> all/usr/local/tce.installed/all
		fi
	done
	fi
	echo -n "Packing..."
	chmod +x all/usr/local/tce.installed/all 2> /dev/null
	sudo mksquashfs all/ all.tcz -comp zstd -quiet -progress
	sudo chmod 0777 all.tcz

echo "done"
}
loaddeps (){
getrecDep "$1"
[ -n "$(ls -A | grep .dep)" ] || return 0
for file in *.dep 
do
echo -n "${file%.dep}:" >> "$LISTDEP"
 while IFS= read -r line; do
	down="${line//-KERNEL.tcz/-${KERNELVER}.tcz}"
	echo -n "$line " >> "$LISTDEP"
	#echo -n "$line;" >> "$LISTDEP"
	#echo "$optdir/../../inst/${down%.tcz}"
	if [ -f "$optdir/../../inst/${down%.tcz}" ] ;
	then 
		echo "Already installed: $down"
	else
		echo -ne "Download dependence: $down\033[0K\r"
		wget "$MIRROR/$down" 2> /dev/null
	fi
 done < "$file"
 echo -ne "\n" >> "$LISTDEP"
done
}
load()
{
 appname="${1%.tcz}.tcz"
 #echo "$optdir/../../inst/${appname%.tcz}"
#echo "$appname"
loaddeps "$appname"
echo -ne "Download: $appname\033[0K\r"
wget "$MIRROR/$appname" 
rm -f *.dep
}
getrecDep() {
dep="$1"
dep="${dep}.dep"
#echo "$dep"
dep="${dep//-KERNEL.tcz/-${KERNELVER}.tcz}"
echo -ne "Get dependences:${dep%.}\033[0K\r"
#echo "$MIRROR/$dep
wget "$MIRROR/$dep" 2> /dev/null
if [ -f "$dep" ] 
then
while IFS= read -r line; do	
	getrecDep "$line"
done < "$dep"

fi
}

readdep()
{
deps=""
while read line; do 
	#echo "${line%%:*}"
	[ "${line%%:*}" == "${1%.tcz}.tcz" ] && deps="${line#${1%.tcz}.tcz:}"
done < "$LISTDEP"
echo "$deps" 
! [ -z "$deps" ] && for list in $deps; do echo $(readdep $list);done

}
checkdeps()
{
	
	dep=$(readdep $1)
	for list in $dep
	do
		! [ $(expr $(grep "$list" "$LISTDEP" | wc -l) - $(grep "$list:" "$LISTDEP" | wc -l)) -ge "2" ] && echo -n " $list"
	done
}
